{"ast":null,"code":"import _defineProperty from \"/Users/i342285/Documents/Self/Carbon/carbon/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/i342285/Documents/Self/Carbon/carbon/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useContext, useEffect } from 'react';\nimport { BaseContext } from './BaseContext';\n\nconst UseBaseContext = () => {\n  const _useContext = useContext(BaseContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        state = _useContext2[0],\n        setState = _useContext2[1];\n\n  function addToEmission(id, value) {\n    setState(state => _objectSpread({}, state, {\n      emissionTotal: _objectSpread({}, state.emissionTotal, {\n        id: state.emissionTotal[id] + value\n      })\n    }));\n    console.log(state.emissionTotal);\n  }\n\n  function resetEmissionTotal() {\n    setState(state => _objectSpread({}, state, {\n      emissionTotal: {\n        energy: 0,\n        food: 0,\n        travel: 0,\n        house: 0\n      }\n    }));\n  }\n\n  function totalEmission() {\n    return state.emissionTotal.house + state.emissionTotal.travel + state.emissionTotal.food + state.emissionTotal.energy;\n  }\n\n  return {\n    addToEmission,\n    totalEmission: totalEmission(),\n    foodEmission: state.emissionTotal.food,\n    energyEmission: state.emissionTotal.energy,\n    houseEmission: state.emissionTotal.house,\n    travelEmission: state.emissionTotal.travel,\n    resetEmissionTotal: resetEmissionTotal()\n  };\n};\n\nexport default UseBaseContext;","map":{"version":3,"sources":["/Users/i342285/Documents/Self/Carbon/carbon/src/ContextApi/UseBaseContext.js"],"names":["useContext","useEffect","BaseContext","UseBaseContext","state","setState","addToEmission","id","value","emissionTotal","console","log","resetEmissionTotal","energy","food","travel","house","totalEmission","foodEmission","energyEmission","houseEmission","travelEmission"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,sBACCH,UAAU,CAACE,WAAD,CADX;AAAA;AAAA,QAClBE,KADkB;AAAA,QACXC,QADW;;AAGzB,WAASC,aAAT,CAAuBC,EAAvB,EAA2BC,KAA3B,EAAkC;AAC9BH,IAAAA,QAAQ,CAACD,KAAK,sBACPA,KADO;AACAK,MAAAA,aAAa,oBAChBL,KAAK,CAACK,aADU;AACKF,QAAAA,EAAE,EAAEH,KAAK,CAACK,aAAN,CAAoBF,EAApB,IAA0BC;AADnC;AADb,MAAN,CAAR;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACK,aAAlB;AACH;;AAED,WAASG,kBAAT,GAA8B;AAC1BP,IAAAA,QAAQ,CAACD,KAAK,sBACPA,KADO;AACAK,MAAAA,aAAa,EAAE;AACrBI,QAAAA,MAAM,EAAE,CADa;AAErBC,QAAAA,IAAI,EAAE,CAFe;AAGrBC,QAAAA,MAAM,EAAE,CAHa;AAIrBC,QAAAA,KAAK,EAAE;AAJc;AADf,MAAN,CAAR;AAQH;;AAED,WAASC,aAAT,GAAyB;AACrB,WAAOb,KAAK,CAACK,aAAN,CAAoBO,KAApB,GAA4BZ,KAAK,CAACK,aAAN,CAAoBM,MAAhD,GAAyDX,KAAK,CAACK,aAAN,CAAoBK,IAA7E,GAAoFV,KAAK,CAACK,aAAN,CAAoBI,MAA/G;AACH;;AAED,SAAO;AACHP,IAAAA,aADG;AAEHW,IAAAA,aAAa,EAAEA,aAAa,EAFzB;AAGHC,IAAAA,YAAY,EAAEd,KAAK,CAACK,aAAN,CAAoBK,IAH/B;AAIHK,IAAAA,cAAc,EAAEf,KAAK,CAACK,aAAN,CAAoBI,MAJjC;AAKHO,IAAAA,aAAa,EAAEhB,KAAK,CAACK,aAAN,CAAoBO,KALhC;AAMHK,IAAAA,cAAc,EAAEjB,KAAK,CAACK,aAAN,CAAoBM,MANjC;AAOHH,IAAAA,kBAAkB,EAAEA,kBAAkB;AAPnC,GAAP;AASH,CApCD;;AAuCA,eAAeT,cAAf","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { BaseContext } from './BaseContext'\n\nconst UseBaseContext = () => {\n    const [state, setState] = useContext(BaseContext);\n\n    function addToEmission(id, value) {\n        setState(state => ({\n            ...state, emissionTotal: {\n                ...state.emissionTotal, id: state.emissionTotal[id] + value\n            }\n        }));\n        console.log(state.emissionTotal);\n    }\n\n    function resetEmissionTotal() {\n        setState(state => ({\n            ...state, emissionTotal: {\n                energy: 0,\n                food: 0,\n                travel: 0,\n                house: 0\n            }\n        }));\n    }\n\n    function totalEmission() {\n        return state.emissionTotal.house + state.emissionTotal.travel + state.emissionTotal.food + state.emissionTotal.energy;\n    }\n\n    return {\n        addToEmission,\n        totalEmission: totalEmission(),\n        foodEmission: state.emissionTotal.food,\n        energyEmission: state.emissionTotal.energy,\n        houseEmission: state.emissionTotal.house,\n        travelEmission: state.emissionTotal.travel,\n        resetEmissionTotal: resetEmissionTotal()\n    }\n}\n\n\nexport default UseBaseContext;"]},"metadata":{},"sourceType":"module"}